#+TITLE: Ledger Simulator
#+STARTUP: indent


* Ledger Simulator

There is a simple simulator of a ledger that will use the same transaction rules
as the final chia network. It's intended to be used by those creating and testing
smart transactions.

Python 3.7 or later is required.

* Launching

- create a virtual environment

#+BEGIN_SRC bash
$ python3 -m venv env
$ ln -s env/bin/activate
$ . activate
$ pip install -r requirements.txt
#+END_SRC

*Note* The requirements.txt is currently incomplete. Read the notes there to finish set-up.

- launch
#+BEGIN_SRC bash
$ ledger-sim -h
$ ledger-sim
#+END_SRC

If you don't specify a port, the default of 9868 will be selected automatically.

- install ipython if necessary
#+BEGIN_SRC bash
$ pip install ipython
#+END_SRC
We need ipython because it allows ~await~ syntax on the command-line.

- test a client
#+BEGIN_SRC bash
$ ipython
In [1]: import asyncio
In [2]: from chiasim.remote.client import request_response_proxy
In [3]: reader, writer = await asyncio.open_connection("localhost", 9868)
In [4]: ledger_api = request_response_proxy(reader, writer)
In [5]: await ledger_api.ping()
In [5]: await ledger_api.ping(m="foo")
Out[5]: {'response': "got ping message 'foo' at time 2019-07-03 00:21:02.741468"}
In [6]: await ledger_api.all_unspents()
Out[6]: {'unspents': []}
#+END_SRC
